[[ ... ]] - optional ...
$blah - meta variable
# - comment

classDef := 

[[ [mode $symbol*]  ]]
[[ public ]] class $symbol : $type  [[ - $symbol* ]]
{
    # order shouldn't matter for these
    [[ $fieldDef* ]]
    [[ $methodDef* ]]
    [[ $constructorDef* ]]
    [[ $classDef ]]
}

interfaceDef :=

[[ public ]] interface $symbol : $type [[ - $symbol* ]]
{
    [[ $signature+ ]]
}

signature := $symbol : $type ;

type := $symbol 
      | '$symbol
      | $type -> $type 
      | ( $type )
      | [[ ('$symbol : $symbol* )* =>) $type 

constructorDef :=

[[ [ mode $symbol ] ]]
[[ public ]] cons : $type ( $symbol* )
{
    $statement*
    $classDef*
}

methodDef := 

[[ public ]] $symbol [[ < $symbol* >  ]] : $type
{
    $statement*
    $classDef*
}

namespaceDef := 

using $symbol; *

namespace $symbol [[ . $symbolList ]] 
{
    $interfaceDef*
    $classDef*
    $methodDef*
}

lambda :=

foreach :=

while :=

do :=

field/methodIndex :=

constructorCall :=

functionCall :=

match :=

constantDef :=

varDef :=

return :=

new :=

assignment :=

number :=

string := "whatever"
        | [[ whatever ]]

comment := -- whatever
         | --[=*[ whatever  --]=*]

binaryExpr :=

ifStatement :=


